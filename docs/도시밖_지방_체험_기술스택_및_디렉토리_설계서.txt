
도시밖 지방 체험 – 기술 스택 및 디렉토리 구조 설계서

────────────────────────────────────────
🧱 1. 기술 스택 개요
────────────────────────────────────────
[Frontend]
- React 18 (with Vite)
- TypeScript
- React Router DOM
- Tailwind CSS
- Framer Motion (선택)
- Axios
- Lucide-react (icon set)

[Backend]
- Node.js
- TypeScript
- Express.js (선택적으로 사용)
- JSON 파일 기반 더미 데이터 구조

[LLM Integration]
- OpenAI API (gpt-4-turbo 또는 gpt-3.5-turbo)

[Deployment]
- Vercel 또는 Netlify (Frontend)
- Railway 또는 Render (Backend, 선택)

────────────────────────────────────────
📦 2. 주요 NPM 패키지 목록
────────────────────────────────────────
# Frontend
npm install react react-dom react-router-dom typescript
npm install -D vite @types/react @types/react-dom
npm install tailwindcss postcss autoprefixer
npx tailwindcss init -p
npm install framer-motion
npm install axios
npm install lucide-react

# Backend (선택)
npm install express cors openai
npm install -D typescript ts-node-dev @types/node @types/express

────────────────────────────────────────
🗂️ 3. 디렉토리 구조 (Frontend)
────────────────────────────────────────
/frontend
├── public/
│   └── assets/               # 이미지, 로고 등 정적 리소스
├── src/
│   ├── App.tsx               # 라우터 진입점
│   ├── main.tsx              # 루트 렌더링
│   ├── index.css             # 글로벌 스타일
│   ├── constants/
│   │   ├── experiences.json  # 체험 데이터
│   │   ├── user.json         # 사용자 더미 데이터
│   │   └── recommendations.json  # 추천 결과
│   ├── components/
│   │   ├── common/           # Appbar, Footer, 버튼 등 공통 UI
│   │   ├── home/             # 홈 화면 구성 요소
│   │   ├── chat/             # 챗봇 대화 컴포넌트
│   │   ├── recommend/        # 추천 결과 화면
│   │   ├── detail/           # 체험 상세 페이지
│   │   └── mypage/           # 마이페이지 관련
│   ├── pages/                # 각 Route별 페이지 컴포넌트
│   ├── routes.tsx            # Route 설정
│   └── utils/                # 공통 함수, API 호출 등
├── tailwind.config.js
├── tsconfig.json
└── vite.config.ts

────────────────────────────────────────
📂 4. 디렉토리 구조 (Backend) – 선택적
────────────────────────────────────────
/backend
├── src/
│   ├── index.ts              # 서버 진입점
│   ├── routes/
│   │   └── openai.ts         # OpenAI 호출용 API 라우터
│   └── mock-data/
│       ├── experiences.json
│       └── reviews.json
├── package.json
├── tsconfig.json
└── .env                      # OPENAI_API_KEY 등

────────────────────────────────────────
📌 비고
- 개발 중 실제 DB는 사용하지 않으며 JSON 파일을 데이터 소스로 사용
- 추후 필요 시 Firebase 또는 PostgreSQL로 교체 가능
- 개발 AI는 Cursor 기반으로 작업 가이드 문서를 그대로 참조

